name: Build & Release (Linux/Windows)

on:
  push:
    tags: [ '*' ]

jobs:
  release:
    permissions: write-all
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release create ${{ github.ref_name }} -F release_notes/${{ github.ref_name }}.md -t "v${{ github.ref_name }}"

  build:
    needs: release
    permissions: write-all
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            BUILD_NAME: Z64ComDecGUI_Windows
            BUILD_ARGS: -F -w --add-data "res;res" src/main.py
            CMD_EXEC: PyInstaller
            FILE_TYPE: ".exe"
            Z64TARGET: win32
          - os: ubuntu-latest
            BUILD_NAME: Z64ComDecGUI_Linux
            BUILD_ARGS: -F -w --add-data "res:res" src/main.py
            CMD_EXEC: pyinstaller
            FILE_TYPE: ""
            Z64TARGET: linux64
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Build z64compress for ${{ matrix.os }}
      run: git submodule update --init --recursive
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build Project for ${{ matrix.os }}
      run: ${{ matrix.CMD_EXEC }} ${{ matrix.BUILD_ARGS }} -n ${{ matrix.BUILD_NAME }} ${{ matrix.CMD_EXTRAS }}
    - name: Upload Release Artifacts
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release upload ${{ github.ref_name }} dist/${{ matrix.BUILD_NAME }}${{ matrix.FILE_TYPE }}
